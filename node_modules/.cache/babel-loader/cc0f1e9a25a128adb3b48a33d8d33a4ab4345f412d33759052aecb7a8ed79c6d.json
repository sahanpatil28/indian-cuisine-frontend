{"ast":null,"code":"import { __spreadArray } from \"tslib\";\nimport * as React from 'react';\nimport { SUPPORTS_CONSTRUCTABLE_STYLESHEETS, SUPPORTS_MODIFYING_ADOPTED_STYLESHEETS, Stylesheet, makeShadowConfig, cloneCSSStyleSheet } from '@fluentui/merge-styles';\nimport { useWindow } from '@fluentui/react-window-provider';\nimport { useMergeStylesRootStylesheets } from './useMergeStylesRootStylesheets';\nimport { useMergeStylesShadowRootContext } from './useMergeStylesShadowRoot';\n/**\n * Use adopted stylesheets in the parent shadow root.\n */\nexport var useAdoptedStylesheet = function (stylesheetKey) {\n  var shadowCtx = useMergeStylesShadowRootContext();\n  var rootMergeStyles = useMergeStylesRootStylesheets();\n  var win = useWindow();\n  return useAdoptedStylesheetEx(stylesheetKey, shadowCtx, rootMergeStyles, win);\n};\n/**\n * Optimization for specific cases like nested customizables.\n */\nexport var useAdoptedStylesheetEx = function (stylesheetKey, shadowCtx, rootMergeStyles, win) {\n  var polyfillInsertListners = React.useRef({});\n  React.useEffect(function () {\n    if (!shadowCtx) {\n      return;\n    }\n    var polyfillListeners = polyfillInsertListners.current;\n    polyfillInsertListners.current = {};\n    return function () {\n      Object.keys(polyfillListeners).forEach(function (key) {\n        polyfillListeners[key]();\n      });\n    };\n  }, [win, stylesheetKey, shadowCtx]);\n  if (!shadowCtx) {\n    return false;\n  }\n  if (shadowCtx.shadowRoot && !shadowCtx.stylesheets.has(stylesheetKey)) {\n    var adoptableStyleSheet = rootMergeStyles.get(stylesheetKey);\n    if (adoptableStyleSheet && (win === null || win === void 0 ? void 0 : win.document)) {\n      adoptSheet(shadowCtx, win.document, stylesheetKey, adoptableStyleSheet, polyfillInsertListners.current);\n    }\n  }\n  return true;\n};\nvar updatePolyfillSheet = function (shadowCtx, stylesheetKey, rule) {\n  var shadowRoot = shadowCtx.shadowRoot;\n  var style = shadowRoot.querySelector(\"[data-merge-styles-stylesheet-key=\\\"\".concat(stylesheetKey, \"\\\"]\"));\n  if (style === null || style === void 0 ? void 0 : style.sheet) {\n    style.sheet.insertRule(rule);\n  }\n};\nvar adoptSheet = function (shadowCtx, doc, stylesheetKey, stylesheet, listenerRef) {\n  var _a, _b, _c, _d, _e;\n  var shadowRoot = shadowCtx.shadowRoot;\n  shadowCtx.stylesheets.set(stylesheetKey, stylesheet);\n  if (SUPPORTS_CONSTRUCTABLE_STYLESHEETS) {\n    // Maintain the sort order of Fluent style sheets\n    var prevSheets = shadowRoot.adoptedStyleSheets;\n    var i = prevSheets.length;\n    var found = i === 0;\n    while (i >= 0 && !found) {\n      i--;\n      var prevSheet = prevSheets[i];\n      var prevSortOrder = (_b = (_a = prevSheet.metadata) === null || _a === void 0 ? void 0 : _a.sortOrder) !== null && _b !== void 0 ? _b : 0;\n      var sheetSortOrder = (_d = (_c = stylesheet.metadata) === null || _c === void 0 ? void 0 : _c.sortOrder) !== null && _d !== void 0 ? _d : 0;\n      if (prevSheet.bucketName === 'merge-styles' && prevSortOrder < sheetSortOrder) {\n        found = true;\n      }\n    }\n    if (SUPPORTS_MODIFYING_ADOPTED_STYLESHEETS) {\n      // The current spec allows the `adoptedStyleSheets` array to be modified.\n      // Previous versions of the spec required a new array to be created.\n      // For more details see: https://github.com/microsoft/fast/pull/6703\n      shadowRoot.adoptedStyleSheets.splice(i + 1, 0, stylesheet);\n    } else {\n      shadowRoot.adoptedStyleSheets = __spreadArray(__spreadArray(__spreadArray([], shadowRoot.adoptedStyleSheets.slice(0, i + 1), true), [stylesheet], false), shadowRoot.adoptedStyleSheets.slice(i + 1), true);\n    }\n  } else {\n    var style = doc.createElement('style');\n    style.setAttribute('data-merge-styles-stylesheet-key', stylesheetKey);\n    var otherStyles = shadowRoot.querySelectorAll('[data-merge-styles-stylesheet-key]');\n    if (otherStyles.length > 0) {\n      shadowRoot.insertBefore(style, otherStyles[otherStyles.length - 1].nextSibling);\n    } else {\n      shadowRoot.insertBefore(style, shadowRoot.firstChild);\n    }\n    if (style.sheet) {\n      cloneCSSStyleSheet(stylesheet, style.sheet);\n      if (!listenerRef[stylesheetKey]) {\n        var onInsert = function (_a) {\n          var key = _a.key,\n            rule = _a.rule;\n          if (key === stylesheetKey) {\n            if (shadowCtx && rule) {\n              updatePolyfillSheet(shadowCtx, key, rule);\n            }\n          }\n        };\n        var polyfillSheet = Stylesheet.getInstance(makeShadowConfig(stylesheetKey, true, (_e = doc.defaultView) !== null && _e !== void 0 ? _e : undefined));\n        listenerRef[stylesheetKey] = polyfillSheet.onInsertRule(onInsert);\n      }\n    }\n  }\n};","map":{"version":3,"names":["React","SUPPORTS_CONSTRUCTABLE_STYLESHEETS","SUPPORTS_MODIFYING_ADOPTED_STYLESHEETS","Stylesheet","makeShadowConfig","cloneCSSStyleSheet","useWindow","useMergeStylesRootStylesheets","useMergeStylesShadowRootContext","useAdoptedStylesheet","stylesheetKey","shadowCtx","rootMergeStyles","win","useAdoptedStylesheetEx","polyfillInsertListners","useRef","useEffect","polyfillListeners","current","Object","keys","forEach","key","shadowRoot","stylesheets","has","adoptableStyleSheet","get","document","adoptSheet","updatePolyfillSheet","rule","style","querySelector","concat","sheet","insertRule","doc","stylesheet","listenerRef","set","prevSheets","adoptedStyleSheets","i","length","found","prevSheet","prevSortOrder","_b","_a","metadata","sortOrder","sheetSortOrder","_d","_c","bucketName","splice","__spreadArray","slice","createElement","setAttribute","otherStyles","querySelectorAll","insertBefore","nextSibling","firstChild","onInsert","polyfillSheet","getInstance","_e","defaultView","undefined","onInsertRule"],"sources":["C:\\Users\\sahan\\Documents\\Projects\\indian-cuisine-frontend\\node_modules\\@fluentui\\utilities\\lib\\shadowDom\\src\\shadowDom\\hooks\\useAdoptedStylesheet.ts"],"sourcesContent":["import * as React from 'react';\nimport {\n  SUPPORTS_CONSTRUCTABLE_STYLESHEETS,\n  SUPPORTS_MODIFYING_ADOPTED_STYLESHEETS,\n  Stylesheet,\n  makeShadowConfig,\n  cloneCSSStyleSheet,\n} from '@fluentui/merge-styles';\nimport { useWindow } from '@fluentui/react-window-provider';\nimport { useMergeStylesRootStylesheets } from './useMergeStylesRootStylesheets';\nimport { useMergeStylesShadowRootContext } from './useMergeStylesShadowRoot';\nimport type { ExtendedCSSStyleSheet, InsertRuleCallback } from '@fluentui/merge-styles';\nimport type { MergeStylesShadowRootContextValue } from '../contexts/MergeStylesShadowRootContext';\n\ntype PolyfillInsertListeners = Record<string, Function>;\n\nexport type AdoptedStylesheetHook = (stylesheetKey: string) => boolean;\nexport type AdoptedStylesheetExHook = (\n  stylesheetKey: string,\n  shadowCtx: MergeStylesShadowRootContextValue | undefined,\n  rootMergeStyles: Map<string, ExtendedCSSStyleSheet>,\n  win: Window | undefined,\n) => boolean;\n\n/**\n * Use adopted stylesheets in the parent shadow root.\n */\nexport const useAdoptedStylesheet: AdoptedStylesheetHook = stylesheetKey => {\n  const shadowCtx = useMergeStylesShadowRootContext();\n  const rootMergeStyles = useMergeStylesRootStylesheets();\n  const win = useWindow();\n\n  return useAdoptedStylesheetEx(stylesheetKey, shadowCtx, rootMergeStyles, win);\n};\n\n/**\n * Optimization for specific cases like nested customizables.\n */\nexport const useAdoptedStylesheetEx: AdoptedStylesheetExHook = (stylesheetKey, shadowCtx, rootMergeStyles, win) => {\n  const polyfillInsertListners = React.useRef<PolyfillInsertListeners>({});\n\n  React.useEffect(() => {\n    if (!shadowCtx) {\n      return;\n    }\n    const polyfillListeners = polyfillInsertListners.current;\n    polyfillInsertListners.current = {};\n\n    return () => {\n      Object.keys(polyfillListeners).forEach(key => {\n        polyfillListeners[key]();\n      });\n    };\n  }, [win, stylesheetKey, shadowCtx]);\n\n  if (!shadowCtx) {\n    return false;\n  }\n\n  if (shadowCtx.shadowRoot && !shadowCtx.stylesheets.has(stylesheetKey)) {\n    const adoptableStyleSheet = rootMergeStyles.get(stylesheetKey);\n    if (adoptableStyleSheet && win?.document) {\n      adoptSheet(shadowCtx, win.document, stylesheetKey, adoptableStyleSheet, polyfillInsertListners.current);\n    }\n  }\n\n  return true;\n};\n\nconst updatePolyfillSheet = (shadowCtx: MergeStylesShadowRootContextValue, stylesheetKey: string, rule: string) => {\n  const shadowRoot = shadowCtx.shadowRoot!;\n  const style = shadowRoot.querySelector(`[data-merge-styles-stylesheet-key=\"${stylesheetKey}\"]`) as HTMLStyleElement;\n  if (style?.sheet) {\n    style.sheet.insertRule(rule);\n  }\n};\n\nconst adoptSheet = (\n  shadowCtx: MergeStylesShadowRootContextValue,\n  doc: Document,\n  stylesheetKey: string,\n  stylesheet: ExtendedCSSStyleSheet,\n  listenerRef: PolyfillInsertListeners,\n) => {\n  const shadowRoot = shadowCtx.shadowRoot!;\n\n  shadowCtx.stylesheets.set(stylesheetKey, stylesheet);\n  if (SUPPORTS_CONSTRUCTABLE_STYLESHEETS) {\n    // Maintain the sort order of Fluent style sheets\n    const prevSheets = shadowRoot.adoptedStyleSheets;\n    let i = prevSheets.length;\n    let found = i === 0;\n    while (i >= 0 && !found) {\n      i--;\n\n      const prevSheet = prevSheets[i] as ExtendedCSSStyleSheet;\n      const prevSortOrder = (prevSheet.metadata?.sortOrder as number) ?? 0;\n      const sheetSortOrder = (stylesheet.metadata?.sortOrder as number) ?? 0;\n      if (prevSheet.bucketName === 'merge-styles' && prevSortOrder < sheetSortOrder) {\n        found = true;\n      }\n    }\n\n    if (SUPPORTS_MODIFYING_ADOPTED_STYLESHEETS) {\n      // The current spec allows the `adoptedStyleSheets` array to be modified.\n      // Previous versions of the spec required a new array to be created.\n      // For more details see: https://github.com/microsoft/fast/pull/6703\n      shadowRoot.adoptedStyleSheets.splice(i + 1, 0, stylesheet);\n    } else {\n      shadowRoot.adoptedStyleSheets = [\n        ...shadowRoot.adoptedStyleSheets.slice(0, i + 1),\n        stylesheet,\n        ...shadowRoot.adoptedStyleSheets.slice(i + 1),\n      ];\n    }\n  } else {\n    const style = doc.createElement('style');\n    style.setAttribute('data-merge-styles-stylesheet-key', stylesheetKey);\n\n    const otherStyles = shadowRoot.querySelectorAll('[data-merge-styles-stylesheet-key]');\n    if (otherStyles.length > 0) {\n      shadowRoot.insertBefore(style, otherStyles[otherStyles.length - 1].nextSibling);\n    } else {\n      shadowRoot.insertBefore(style, shadowRoot.firstChild);\n    }\n\n    if (style.sheet) {\n      cloneCSSStyleSheet(stylesheet, style.sheet);\n      if (!listenerRef[stylesheetKey]) {\n        const onInsert: InsertRuleCallback = ({ key, rule }) => {\n          if (key === stylesheetKey) {\n            if (shadowCtx && rule) {\n              updatePolyfillSheet(shadowCtx, key, rule);\n            }\n          }\n        };\n        const polyfillSheet = Stylesheet.getInstance(\n          makeShadowConfig(stylesheetKey, true, doc.defaultView ?? undefined),\n        );\n        listenerRef[stylesheetKey] = polyfillSheet.onInsertRule(onInsert);\n      }\n    }\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}