{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sahan\\\\Documents\\\\Projects\\\\indian-cuisine-frontend\\\\src\\\\components\\\\DishList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DishList = () => {\n  _s();\n  const [dishes, setDishes] = useState([]); // Initialize as an empty array\n  const [currentPage, setCurrentPage] = useState(1);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filteredDishes, setFilteredDishes] = useState([]);\n  const itemsPerPage = 5;\n  useEffect(() => {\n    // Fetch dishes from the backend\n    fetch('http://localhost:3000/dishes').then(response => response.json()).then(data => {\n      setDishes(data); // Set dishes after receiving the data\n      setFilteredDishes(data); // Initialize filteredDishes with all the dishes\n    }).catch(error => console.error('Error fetching dishes:', error));\n  }, []);\n  useEffect(() => {\n    // Filter dishes based on search term\n    const results = dishes.filter(dish => dish.name.toLowerCase().includes(searchTerm.toLowerCase()) || dish.state.toLowerCase().includes(searchTerm.toLowerCase()) || dish.diet.toLowerCase().includes(searchTerm.toLowerCase()));\n    setFilteredDishes(results); // Update filteredDishes with filtered results\n  }, [searchTerm, dishes]); // Re-run this whenever dishes or searchTerm changes\n\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentDishes = filteredDishes.slice(indexOfFirstItem, indexOfLastItem);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dish List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search...\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Preparation Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Cooking Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Diet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"State\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: currentDishes.map(dish => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/dish/${dish.name}`,\n              children: dish.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [dish.prep_time, \" mins\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [dish.cook_time, \" mins\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: dish.diet\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: dish.state\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)]\n        }, dish.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Array.from({\n        length: Math.ceil(filteredDishes.length / itemsPerPage)\n      }, (_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(index + 1),\n        children: index + 1\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(DishList, \"vt6IwEuppgEpdr0OoqdNNfwJNpg=\");\n_c = DishList;\nexport default DishList;\nvar _c;\n$RefreshReg$(_c, \"DishList\");","map":{"version":3,"names":["React","useState","useEffect","Link","jsxDEV","_jsxDEV","DishList","_s","dishes","setDishes","currentPage","setCurrentPage","searchTerm","setSearchTerm","filteredDishes","setFilteredDishes","itemsPerPage","fetch","then","response","json","data","catch","error","console","results","filter","dish","name","toLowerCase","includes","state","diet","indexOfLastItem","indexOfFirstItem","currentDishes","slice","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","border","map","to","prep_time","cook_time","Array","from","length","Math","ceil","_","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/sahan/Documents/Projects/indian-cuisine-frontend/src/components/DishList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst DishList = () => {\r\n  const [dishes, setDishes] = useState([]);  // Initialize as an empty array\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [filteredDishes, setFilteredDishes] = useState([]);\r\n  const itemsPerPage = 5;\r\n\r\n  useEffect(() => {\r\n    // Fetch dishes from the backend\r\n    fetch('http://localhost:3000/dishes')\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setDishes(data);  // Set dishes after receiving the data\r\n        setFilteredDishes(data);  // Initialize filteredDishes with all the dishes\r\n      })\r\n      .catch((error) => console.error('Error fetching dishes:', error));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Filter dishes based on search term\r\n    const results = dishes.filter(\r\n      (dish) =>\r\n        dish.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        dish.state.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        dish.diet.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n    setFilteredDishes(results);  // Update filteredDishes with filtered results\r\n  }, [searchTerm, dishes]);  // Re-run this whenever dishes or searchTerm changes\r\n\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const currentDishes = filteredDishes.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Dish List</h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search...\"\r\n        value={searchTerm}\r\n        onChange={(e) => setSearchTerm(e.target.value)}\r\n      />\r\n      <table border=\"1\">\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Preparation Time</th>\r\n            <th>Cooking Time</th>\r\n            <th>Diet</th>\r\n            <th>State</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {currentDishes.map((dish) => (\r\n            <tr key={dish.name}>\r\n              <td>\r\n                <Link to={`/dish/${dish.name}`}>{dish.name}</Link>\r\n              </td>\r\n              <td>{dish.prep_time} mins</td>\r\n              <td>{dish.cook_time} mins</td>\r\n              <td>{dish.diet}</td>\r\n              <td>{dish.state}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <div>\r\n        {Array.from(\r\n          { length: Math.ceil(filteredDishes.length / itemsPerPage) },\r\n          (_, index) => (\r\n            <button key={index} onClick={() => setCurrentPage(index + 1)}>\r\n              {index + 1}\r\n            </button>\r\n          )\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DishList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}