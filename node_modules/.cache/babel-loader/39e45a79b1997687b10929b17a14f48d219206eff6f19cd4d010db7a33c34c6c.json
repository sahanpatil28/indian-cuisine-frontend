{"ast":null,"code":"import { extractStyleParts } from './extractStyleParts';\nimport { isShadowConfig } from './shadowConfig';\nimport { getStyleOptions } from './StyleOptionsState';\nimport { Stylesheet } from './Stylesheet';\nimport { styleToClassName } from './styleToClassName';\n/**\n * Concatenation helper, which can merge class names together. Skips over falsey values.\n *\n * @public\n */\nexport function mergeStyles() {\n  var args = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n  return mergeCss(args, getStyleOptions());\n}\n/**\n * Concatenation helper, which can merge class names together. Skips over falsey values.\n * Accepts a set of options that will be used when calculating styles.\n *\n * @public\n */\nexport function mergeCss(args, options) {\n  var styleArgs = args instanceof Array ? args : [args];\n  var opts = options || {};\n  var hasShadowConfig = isShadowConfig(styleArgs[0]);\n  if (hasShadowConfig) {\n    opts.shadowConfig = styleArgs[0];\n  }\n  opts.stylesheet = Stylesheet.getInstance(opts.shadowConfig);\n  var _a = extractStyleParts(opts.stylesheet, styleArgs),\n    classes = _a.classes,\n    objects = _a.objects;\n  if (objects.length) {\n    classes.push(styleToClassName(opts, objects));\n  }\n  return classes.join(' ');\n}","map":{"version":3,"names":["extractStyleParts","isShadowConfig","getStyleOptions","Stylesheet","styleToClassName","mergeStyles","args","_i","arguments","length","mergeCss","options","styleArgs","Array","opts","hasShadowConfig","shadowConfig","stylesheet","getInstance","_a","classes","objects","push","join"],"sources":["C:\\Users\\sahan\\Documents\\Projects\\indian-cuisine-frontend\\node_modules\\@fluentui\\merge-styles\\src\\mergeStyles.ts"],"sourcesContent":["import { extractStyleParts } from './extractStyleParts';\nimport { IStyle, IStyleBaseArray } from './IStyle';\nimport { IStyleOptions } from './IStyleOptions';\nimport { isShadowConfig, ShadowConfig } from './shadowConfig';\nimport { getStyleOptions } from './StyleOptionsState';\nimport { Stylesheet } from './Stylesheet';\nimport { styleToClassName } from './styleToClassName';\n\ntype Missing = false | null | undefined;\ntype StyleArg = IStyle | IStyleBaseArray | Missing;\ntype StyleArgWithShadow = StyleArg | ShadowConfig;\n\nexport function mergeStyles(...args: StyleArg[]): string;\nexport function mergeStyles(shadowConfig: ShadowConfig, ...args: StyleArg[]): string;\n/**\n * Concatenation helper, which can merge class names together. Skips over falsey values.\n *\n * @public\n */\nexport function mergeStyles(...args: any[]): string {\n  return mergeCss(args, getStyleOptions());\n}\n\n/**\n * Concatenation helper, which can merge class names together. Skips over falsey values.\n * Accepts a set of options that will be used when calculating styles.\n *\n * @public\n */\nexport function mergeCss(args: StyleArgWithShadow | StyleArgWithShadow[], options?: IStyleOptions): string {\n  const styleArgs = args instanceof Array ? args : [args];\n  const opts = options || {};\n  const hasShadowConfig = isShadowConfig(styleArgs[0]);\n  if (hasShadowConfig) {\n    opts.shadowConfig = styleArgs[0] as ShadowConfig;\n  }\n  opts.stylesheet = Stylesheet.getInstance(opts.shadowConfig);\n  const { classes, objects } = extractStyleParts(opts.stylesheet, styleArgs);\n\n  if (objects.length) {\n    classes.push(styleToClassName(opts, objects));\n  }\n\n  return classes.join(' ');\n}\n"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,qBAAqB;AAGvD,SAASC,cAAc,QAAsB,gBAAgB;AAC7D,SAASC,eAAe,QAAQ,qBAAqB;AACrD,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,gBAAgB,QAAQ,oBAAoB;AAQrD;;;;;AAKA,OAAM,SAAUC,WAAWA,CAAA;EAAC,IAAAC,IAAA;OAAA,IAAAC,EAAA,IAAc,EAAdA,EAAA,GAAAC,SAAA,CAAAC,MAAc,EAAdF,EAAA,EAAc;IAAdD,IAAA,CAAAC,EAAA,IAAAC,SAAA,CAAAD,EAAA;;EAC1B,OAAOG,QAAQ,CAACJ,IAAI,EAAEJ,eAAe,EAAE,CAAC;AAC1C;AAEA;;;;;;AAMA,OAAM,SAAUQ,QAAQA,CAACJ,IAA+C,EAAEK,OAAuB;EAC/F,IAAMC,SAAS,GAAGN,IAAI,YAAYO,KAAK,GAAGP,IAAI,GAAG,CAACA,IAAI,CAAC;EACvD,IAAMQ,IAAI,GAAGH,OAAO,IAAI,EAAE;EAC1B,IAAMI,eAAe,GAAGd,cAAc,CAACW,SAAS,CAAC,CAAC,CAAC,CAAC;EACpD,IAAIG,eAAe,EAAE;IACnBD,IAAI,CAACE,YAAY,GAAGJ,SAAS,CAAC,CAAC,CAAiB;;EAElDE,IAAI,CAACG,UAAU,GAAGd,UAAU,CAACe,WAAW,CAACJ,IAAI,CAACE,YAAY,CAAC;EACrD,IAAAG,EAAA,GAAuBnB,iBAAiB,CAACc,IAAI,CAACG,UAAU,EAAEL,SAAS,CAAC;IAAlEQ,OAAO,GAAAD,EAAA,CAAAC,OAAA;IAAEC,OAAO,GAAAF,EAAA,CAAAE,OAAkD;EAE1E,IAAIA,OAAO,CAACZ,MAAM,EAAE;IAClBW,OAAO,CAACE,IAAI,CAAClB,gBAAgB,CAACU,IAAI,EAAEO,OAAO,CAAC,CAAC;;EAG/C,OAAOD,OAAO,CAACG,IAAI,CAAC,GAAG,CAAC;AAC1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}