{"ast":null,"code":"import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { useMergedRefs } from '@fluentui/react-hooks';\nimport { classNamesFunction, divProperties, elementContains, getNativeProps, focusFirstChild } from '../../Utilities';\nimport { OverflowButton } from './OverflowButton';\nimport { useDocumentEx } from '../../utilities/dom';\nvar getClassNames = classNamesFunction();\nvar COMPONENT_NAME = 'OverflowSet';\nvar useComponentRef = function (props, divContainer) {\n  var doc = useDocumentEx();\n  React.useImperativeHandle(props.componentRef, function () {\n    return {\n      focus: function (_forceIntoFirstElement, bypassHiddenElements) {\n        var focusSucceeded = false;\n        if (divContainer.current) {\n          focusSucceeded = focusFirstChild(divContainer.current, bypassHiddenElements);\n        }\n        return focusSucceeded;\n      },\n      focusElement: function (childElement) {\n        var focusSucceeded = false;\n        if (!childElement) {\n          return false;\n        }\n        if (divContainer.current && elementContains(divContainer.current, childElement)) {\n          childElement.focus();\n          focusSucceeded = (doc === null || doc === void 0 ? void 0 : doc.activeElement) === childElement;\n        }\n        return focusSucceeded;\n      }\n    };\n  }, [divContainer, doc]);\n};\nexport var OverflowSetBase = React.forwardRef(function (props, forwardedRef) {\n  var divContainer = React.useRef(null);\n  var mergedRef = useMergedRefs(divContainer, forwardedRef);\n  useComponentRef(props, divContainer);\n  var items = props.items,\n    overflowItems = props.overflowItems,\n    className = props.className,\n    styles = props.styles,\n    vertical = props.vertical,\n    role = props.role,\n    _a = props.overflowSide,\n    overflowSide = _a === void 0 ? 'end' : _a,\n    onRenderItem = props.onRenderItem;\n  var classNames = getClassNames(styles, {\n    className: className,\n    vertical: vertical\n  });\n  var showOverflow = !!overflowItems && overflowItems.length > 0;\n  return React.createElement(\"div\", __assign({}, getNativeProps(props, divProperties), {\n    role: role || 'group',\n    \"aria-orientation\": role === 'menubar' ? vertical === true ? 'vertical' : 'horizontal' : undefined,\n    className: classNames.root,\n    ref: mergedRef\n  }), overflowSide === 'start' && showOverflow && React.createElement(OverflowButton, __assign({}, props, {\n    className: classNames.overflowButton\n  })), items && items.map(function (item, i) {\n    return React.createElement(\"div\", {\n      className: classNames.item,\n      key: item.key,\n      role: \"none\"\n    }, onRenderItem(item));\n  }), overflowSide === 'end' && showOverflow && React.createElement(OverflowButton, __assign({}, props, {\n    className: classNames.overflowButton\n  })));\n});\nOverflowSetBase.displayName = COMPONENT_NAME;","map":{"version":3,"names":["React","useMergedRefs","classNamesFunction","divProperties","elementContains","getNativeProps","focusFirstChild","OverflowButton","useDocumentEx","getClassNames","COMPONENT_NAME","useComponentRef","props","divContainer","doc","useImperativeHandle","componentRef","focus","_forceIntoFirstElement","bypassHiddenElements","focusSucceeded","current","focusElement","childElement","activeElement","OverflowSetBase","forwardRef","forwardedRef","useRef","mergedRef","items","overflowItems","className","styles","vertical","role","_a","overflowSide","onRenderItem","classNames","showOverflow","length","createElement","__assign","undefined","root","ref","overflowButton","map","item","i","key","displayName"],"sources":["C:\\Users\\sahan\\Documents\\Projects\\indian-cuisine-frontend\\node_modules\\@fluentui\\react\\lib\\components\\src\\components\\OverflowSet\\OverflowSet.base.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useMergedRefs } from '@fluentui/react-hooks';\nimport { classNamesFunction, divProperties, elementContains, getNativeProps, focusFirstChild } from '../../Utilities';\nimport { OverflowButton } from './OverflowButton';\nimport type { IProcessedStyleSet } from '../../Styling';\nimport type { IOverflowSetProps, IOverflowSetStyles, IOverflowSetStyleProps, IOverflowSet } from './OverflowSet.types';\nimport { useDocumentEx } from '../../utilities/dom';\n\nconst getClassNames = classNamesFunction<IOverflowSetStyleProps, IOverflowSetStyles>();\nconst COMPONENT_NAME = 'OverflowSet';\n\nconst useComponentRef = (props: IOverflowSetProps, divContainer: React.RefObject<HTMLDivElement>) => {\n  const doc = useDocumentEx();\n  React.useImperativeHandle(\n    props.componentRef,\n    (): IOverflowSet => ({\n      focus: (_forceIntoFirstElement?: boolean, bypassHiddenElements?: boolean): boolean => {\n        let focusSucceeded = false;\n        if (divContainer.current) {\n          focusSucceeded = focusFirstChild(divContainer.current, bypassHiddenElements);\n        }\n        return focusSucceeded;\n      },\n      focusElement: (childElement?: HTMLElement) => {\n        let focusSucceeded = false;\n        if (!childElement) {\n          return false;\n        }\n        if (divContainer.current && elementContains(divContainer.current, childElement)) {\n          childElement.focus();\n          focusSucceeded = doc?.activeElement === childElement;\n        }\n        return focusSucceeded;\n      },\n    }),\n    [divContainer, doc],\n  );\n};\n\nexport const OverflowSetBase: React.FunctionComponent<IOverflowSetProps> = React.forwardRef<\n  HTMLDivElement,\n  IOverflowSetProps\n>((props, forwardedRef) => {\n  const divContainer = React.useRef<HTMLDivElement>(null);\n  const mergedRef = useMergedRefs(divContainer, forwardedRef);\n  useComponentRef(props, divContainer);\n\n  const { items, overflowItems, className, styles, vertical, role, overflowSide = 'end', onRenderItem } = props;\n\n  const classNames: IProcessedStyleSet<IOverflowSetStyles> = getClassNames(styles, { className, vertical });\n\n  const showOverflow = !!overflowItems && overflowItems.length > 0;\n\n  return (\n    <div\n      {...getNativeProps<React.HTMLAttributes<HTMLDivElement>>(props, divProperties)}\n      role={role || 'group'}\n      aria-orientation={role === 'menubar' ? (vertical === true ? 'vertical' : 'horizontal') : undefined}\n      className={classNames.root}\n      ref={mergedRef}\n    >\n      {overflowSide === 'start' && showOverflow && <OverflowButton {...props} className={classNames.overflowButton} />}\n      {items &&\n        items.map((item, i) => (\n          <div className={classNames.item} key={item.key} role=\"none\">\n            {onRenderItem(item)}\n          </div>\n        ))}\n      {overflowSide === 'end' && showOverflow && <OverflowButton {...props} className={classNames.overflowButton} />}\n    </div>\n  );\n});\nOverflowSetBase.displayName = COMPONENT_NAME;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}