{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport * as React from 'react';\nimport { GLOBAL_STYLESHEET_KEY } from '@fluentui/merge-styles';\nimport { useMergeStylesHooks } from '../hooks/useMergeStylesHooks';\nexport var MergeStylesShadowRootContext = React.createContext(undefined);\n/**\n * Context for a shadow root.\n */\nexport var MergeStylesShadowRootProvider = function (_a) {\n  var shadowRoot = _a.shadowRoot,\n    props = __rest(_a, [\"shadowRoot\"]);\n  var value = React.useMemo(function () {\n    return {\n      stylesheets: new Map(),\n      shadowRoot: shadowRoot\n    };\n  }, [shadowRoot]);\n  return React.createElement(MergeStylesShadowRootContext.Provider, __assign({\n    value: value\n  }, props), React.createElement(GlobalStyles, null), props.children);\n};\nvar GlobalStyles = function (props) {\n  var useAdoptedStylesheet = useMergeStylesHooks().useAdoptedStylesheet;\n  useAdoptedStylesheet(GLOBAL_STYLESHEET_KEY);\n  return null;\n};","map":{"version":3,"names":["React","GLOBAL_STYLESHEET_KEY","useMergeStylesHooks","MergeStylesShadowRootContext","createContext","undefined","MergeStylesShadowRootProvider","_a","shadowRoot","props","__rest","value","useMemo","stylesheets","Map","createElement","Provider","__assign","GlobalStyles","children","useAdoptedStylesheet"],"sources":["C:\\Users\\sahan\\Documents\\Projects\\indian-cuisine-frontend\\node_modules\\@fluentui\\utilities\\lib\\shadowDom\\src\\shadowDom\\contexts\\MergeStylesShadowRootContext.tsx"],"sourcesContent":["import * as React from 'react';\nimport { GLOBAL_STYLESHEET_KEY } from '@fluentui/merge-styles';\nimport { useMergeStylesHooks } from '../hooks/useMergeStylesHooks';\n\nexport type MergeStylesShadowRootContextValue = {\n  /**\n   * Map of stylesheets available in the context.\n   */\n  stylesheets: Map<string, CSSStyleSheet>;\n\n  /**\n   * Shadow root for this context.\n   */\n  shadowRoot?: ShadowRoot | null;\n};\n\nexport const MergeStylesShadowRootContext = React.createContext<MergeStylesShadowRootContextValue | undefined>(\n  undefined,\n);\n\nexport type MergeStylesShadowRootProviderProps = {\n  /**\n   * Shadow root for this context.\n   */\n  shadowRoot?: ShadowRoot | null;\n};\n\n/**\n * Context for a shadow root.\n */\nexport const MergeStylesShadowRootProvider: React.FC<MergeStylesShadowRootProviderProps> = ({\n  shadowRoot,\n  ...props\n}) => {\n  const value = React.useMemo(() => {\n    return {\n      stylesheets: new Map(),\n      shadowRoot,\n    };\n  }, [shadowRoot]);\n\n  return (\n    <MergeStylesShadowRootContext.Provider value={value} {...props}>\n      <GlobalStyles />\n      {props.children}\n    </MergeStylesShadowRootContext.Provider>\n  );\n};\n\nconst GlobalStyles: React.FC = props => {\n  const { useAdoptedStylesheet } = useMergeStylesHooks();\n  useAdoptedStylesheet(GLOBAL_STYLESHEET_KEY);\n  return null;\n};\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,qBAAqB,QAAQ,wBAAwB;AAC9D,SAASC,mBAAmB,QAAQ,8BAA8B;AAclE,OAAO,IAAMC,4BAA4B,GAAGH,KAAK,CAACI,aAAa,CAC7DC,SAAS,CACV;AASD;;;AAGA,OAAO,IAAMC,6BAA6B,GAAiD,SAAAA,CAACC,EAG3F;EAFC,IAAAC,UAAU,GAAAD,EAAA,CAAAC,UAAA;IACPC,KAAK,GAAAC,MAAA,CAAAH,EAAA,EAFkF,cAG3F,CADS;EAER,IAAMI,KAAK,GAAGX,KAAK,CAACY,OAAO,CAAC;IAC1B,OAAO;MACLC,WAAW,EAAE,IAAIC,GAAG,EAAE;MACtBN,UAAU,EAAAA;KACX;EACH,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhB,OACER,KAAA,CAAAe,aAAA,CAACZ,4BAA4B,CAACa,QAAQ,EAAAC,QAAA;IAACN,KAAK,EAAEA;EAAK,GAAMF,KAAK,GAC5DT,KAAA,CAAAe,aAAA,CAACG,YAAY,OAAG,EACfT,KAAK,CAACU,QAAQ,CACuB;AAE5C,CAAC;AAED,IAAMD,YAAY,GAAa,SAAAA,CAAAT,KAAK;EAC1B,IAAAW,oBAAoB,GAAKlB,mBAAmB,EAAE,CAAAkB,oBAA1B;EAC5BA,oBAAoB,CAACnB,qBAAqB,CAAC;EAC3C,OAAO,IAAI;AACb,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}