{"ast":null,"code":"import { getWindow } from './getWindow';\n/**\n * Helper to get bounding client rect. Passing in window will get the window size.\n *\n * @public\n */\nexport function getRect(element, win) {\n  var theWin = (win !== null && win !== void 0 ? win : !element || element && element.hasOwnProperty('devicePixelRatio')) ? getWindow() : getWindow(element);\n  var rect;\n  if (element) {\n    if (element === theWin) {\n      rect = {\n        left: 0,\n        top: 0,\n        width: theWin.innerWidth,\n        height: theWin.innerHeight,\n        right: theWin.innerWidth,\n        bottom: theWin.innerHeight\n      };\n    } else if (element.getBoundingClientRect) {\n      rect = element.getBoundingClientRect();\n    }\n  }\n  return rect;\n}","map":{"version":3,"names":["getWindow","getRect","element","win","theWin","hasOwnProperty","rect","left","top","width","innerWidth","height","innerHeight","right","bottom","getBoundingClientRect"],"sources":["C:\\Users\\sahan\\Documents\\Projects\\indian-cuisine-frontend\\node_modules\\@fluentui\\utilities\\lib\\src\\dom\\getRect.ts"],"sourcesContent":["import type { IRectangle } from '../IRectangle';\nimport { getWindow } from './getWindow';\n\n/**\n * Helper to get bounding client rect. Passing in window will get the window size.\n *\n * @public\n */\nexport function getRect(element: HTMLElement | Window | null, win?: Window): IRectangle | undefined {\n  const theWin =\n    win ?? (!element || (element && element.hasOwnProperty('devicePixelRatio')))\n      ? getWindow()\n      : getWindow(element as HTMLElement)!;\n  let rect: IRectangle | undefined;\n  if (element) {\n    if (element === theWin) {\n      rect = {\n        left: 0,\n        top: 0,\n        width: theWin.innerWidth,\n        height: theWin.innerHeight,\n        right: theWin.innerWidth,\n        bottom: theWin.innerHeight,\n      };\n    } else if ((element as { getBoundingClientRect?: unknown }).getBoundingClientRect) {\n      rect = (element as HTMLElement).getBoundingClientRect();\n    }\n  }\n  return rect;\n}\n"],"mappings":"AACA,SAASA,SAAS,QAAQ,aAAa;AAEvC;;;;;AAKA,OAAM,SAAUC,OAAOA,CAACC,OAAoC,EAAEC,GAAY;EACxE,IAAMC,MAAM,GACV,CAAAD,GAAG,aAAHA,GAAG,cAAHA,GAAG,GAAK,CAACD,OAAO,IAAKA,OAAO,IAAIA,OAAO,CAACG,cAAc,CAAC,kBAAkB,CAAG,IACxEL,SAAS,EAAE,GACXA,SAAS,CAACE,OAAsB,CAAE;EACxC,IAAII,IAA4B;EAChC,IAAIJ,OAAO,EAAE;IACX,IAAIA,OAAO,KAAKE,MAAM,EAAE;MACtBE,IAAI,GAAG;QACLC,IAAI,EAAE,CAAC;QACPC,GAAG,EAAE,CAAC;QACNC,KAAK,EAAEL,MAAM,CAACM,UAAU;QACxBC,MAAM,EAAEP,MAAM,CAACQ,WAAW;QAC1BC,KAAK,EAAET,MAAM,CAACM,UAAU;QACxBI,MAAM,EAAEV,MAAM,CAACQ;OAChB;KACF,MAAM,IAAKV,OAA+C,CAACa,qBAAqB,EAAE;MACjFT,IAAI,GAAIJ,OAAuB,CAACa,qBAAqB,EAAE;;;EAG3D,OAAOT,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}