{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport * as React from 'react';\nimport { GLOBAL_STYLESHEET_KEY, ShadowDomStylesheet, makeShadowConfig } from '@fluentui/merge-styles';\nimport { getWindow } from '../../dom';\nimport { MergeStylesDefaultContext, getNewContext } from './MergeStylesDefaultContext';\nimport { useAdoptedStylesheet as useAdoptedStylesheetDefault, useAdoptedStylesheetEx as useAdoptedStylesheetExDefault } from '../hooks/useAdoptedStylesheet';\nimport { useShadowConfig as useShadowConfigDefault } from '../hooks/useShadowConfig';\nimport { useHasMergeStylesShadowRootContext as useHasMergeStylesShadowRootContextDefault, useMergeStylesShadowRootContext as useMergeStylesShadowRootContextDefault } from '../hooks/useMergeStylesShadowRoot';\nimport { useMergeStylesRootStylesheets as useMergeStylesRootStylesheetsDefault } from '../hooks/useMergeStylesRootStylesheets';\nimport { useStyled as useStyledDefault } from '../hooks/useStyled';\nimport { useWindow as useWindowDefault } from '@fluentui/react-window-provider';\nexport var MergeStylesRootContext = React.createContext(getNewContext());\n/**\n * Root context provider for mergeStyles shadow DOM.\n * Typically this is placed at the render root of your React application.\n */\nexport var MergeStylesRootProvider = function (_a) {\n  var userSheets = _a.stylesheets,\n    userWindow = _a.window,\n    useAdoptedStylesheet = _a.useAdoptedStylesheet,\n    useAdoptedStylesheetEx = _a.useAdoptedStylesheetEx,\n    useShadowConfig = _a.useShadowConfig,\n    useMergeStylesShadowRootContext = _a.useMergeStylesShadowRootContext,\n    useHasMergeStylesShadowRootContext = _a.useHasMergeStylesShadowRootContext,\n    useMergeStylesRootStylesheets = _a.useMergeStylesRootStylesheets,\n    useWindow = _a.useWindow,\n    useStyled = _a.useStyled,\n    props = __rest(_a, [\"stylesheets\", \"window\", \"useAdoptedStylesheet\", \"useAdoptedStylesheetEx\", \"useShadowConfig\", \"useMergeStylesShadowRootContext\", \"useHasMergeStylesShadowRootContext\", \"useMergeStylesRootStylesheets\", \"useWindow\", \"useStyled\"]);\n  var win = userWindow !== null && userWindow !== void 0 ? userWindow : getWindow();\n  var _b = React.useState(function () {\n      return userSheets || new Map();\n    }),\n    stylesheets = _b[0],\n    setStylesheets = _b[1];\n  var sheetHandler = React.useCallback(function (_a) {\n    var key = _a.key,\n      sheet = _a.sheet;\n    setStylesheets(function (prev) {\n      var next = new Map(prev);\n      next.set(key, sheet);\n      return next;\n    });\n  }, []);\n  // Udapte stylesheets based on user style sheet changes\n  React.useEffect(function () {\n    setStylesheets(userSheets || new Map());\n  }, [userSheets]);\n  // Wire up listener for adopted stylesheets\n  React.useEffect(function () {\n    if (!win) {\n      return;\n    }\n    var sheet = ShadowDomStylesheet.getInstance(makeShadowConfig(GLOBAL_STYLESHEET_KEY, false, win));\n    var off = sheet.onAddSheet(sheetHandler);\n    return function () {\n      off();\n    };\n  }, [win, sheetHandler]);\n  // Read stylesheets from window on mount\n  React.useEffect(function () {\n    if (!win) {\n      return;\n    }\n    var changed = false;\n    var next = new Map(stylesheets);\n    var sheet = ShadowDomStylesheet.getInstance(makeShadowConfig(GLOBAL_STYLESHEET_KEY, false, win));\n    var adoptedSheets = sheet.getAdoptedSheets();\n    adoptedSheets.forEach(function (adoptedSheet, key) {\n      next.set(key, adoptedSheet);\n      changed = true;\n    });\n    if (changed) {\n      setStylesheets(next);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  var defaultValues = React.useMemo(function () {\n    return {\n      stylesheets: stylesheets,\n      useAdoptedStylesheet: useAdoptedStylesheet || useAdoptedStylesheetDefault,\n      useAdoptedStylesheetEx: useAdoptedStylesheetEx || useAdoptedStylesheetExDefault,\n      useShadowConfig: useShadowConfig || useShadowConfigDefault,\n      useMergeStylesShadowRootContext: useMergeStylesShadowRootContext || useMergeStylesShadowRootContextDefault,\n      useHasMergeStylesShadowRootContext: useHasMergeStylesShadowRootContext || useHasMergeStylesShadowRootContextDefault,\n      useMergeStylesRootStylesheets: useMergeStylesRootStylesheets || useMergeStylesRootStylesheetsDefault,\n      useWindow: useWindow || useWindowDefault,\n      useStyled: useStyled || useStyledDefault\n    };\n  }, [stylesheets, useAdoptedStylesheet, useAdoptedStylesheetEx, useShadowConfig, useMergeStylesShadowRootContext, useHasMergeStylesShadowRootContext, useMergeStylesRootStylesheets, useWindow, useStyled]);\n  return React.createElement(MergeStylesDefaultContext.Provider, {\n    value: defaultValues\n  }, React.createElement(MergeStylesRootContext.Provider, __assign({\n    value: defaultValues\n  }, props)));\n};","map":{"version":3,"names":["React","GLOBAL_STYLESHEET_KEY","ShadowDomStylesheet","makeShadowConfig","getWindow","MergeStylesDefaultContext","getNewContext","useAdoptedStylesheet","useAdoptedStylesheetDefault","useAdoptedStylesheetEx","useAdoptedStylesheetExDefault","useShadowConfig","useShadowConfigDefault","useHasMergeStylesShadowRootContext","useHasMergeStylesShadowRootContextDefault","useMergeStylesShadowRootContext","useMergeStylesShadowRootContextDefault","useMergeStylesRootStylesheets","useMergeStylesRootStylesheetsDefault","useStyled","useStyledDefault","useWindow","useWindowDefault","MergeStylesRootContext","createContext","MergeStylesRootProvider","_a","userSheets","stylesheets","userWindow","window","props","__rest","win","_b","useState","Map","setStylesheets","sheetHandler","useCallback","key","sheet","prev","next","set","useEffect","getInstance","off","onAddSheet","changed","adoptedSheets","getAdoptedSheets","forEach","adoptedSheet","defaultValues","useMemo","createElement","Provider","value","__assign"],"sources":["C:\\Users\\sahan\\Documents\\Projects\\indian-cuisine-frontend\\node_modules\\@fluentui\\utilities\\lib\\shadowDom\\src\\shadowDom\\contexts\\MergeStylesRootContext.tsx"],"sourcesContent":["import * as React from 'react';\nimport { GLOBAL_STYLESHEET_KEY, ShadowDomStylesheet, makeShadowConfig } from '@fluentui/merge-styles';\nimport { getWindow } from '../../dom';\nimport { MergeStylesDefaultContext, getNewContext } from './MergeStylesDefaultContext';\nimport {\n  useAdoptedStylesheet as useAdoptedStylesheetDefault,\n  useAdoptedStylesheetEx as useAdoptedStylesheetExDefault,\n} from '../hooks/useAdoptedStylesheet';\n\nimport { useShadowConfig as useShadowConfigDefault } from '../hooks/useShadowConfig';\nimport {\n  useHasMergeStylesShadowRootContext as useHasMergeStylesShadowRootContextDefault,\n  useMergeStylesShadowRootContext as useMergeStylesShadowRootContextDefault,\n} from '../hooks/useMergeStylesShadowRoot';\nimport { useMergeStylesRootStylesheets as useMergeStylesRootStylesheetsDefault } from '../hooks/useMergeStylesRootStylesheets';\nimport { useStyled as useStyledDefault } from '../hooks/useStyled';\nimport { useWindow as useWindowDefault } from '@fluentui/react-window-provider';\n\nimport type { ExtendedCSSStyleSheet } from '@fluentui/merge-styles';\nimport type { AdoptedStylesheetExHook, AdoptedStylesheetHook } from '../hooks/useAdoptedStylesheet';\nimport type { ShadowConfigHook } from '../hooks/useShadowConfig';\nimport type {\n  HasMergeStylesShadowRootContextHook,\n  MergeStylesShadowRootContextHook,\n} from '../hooks/useMergeStylesShadowRoot';\nimport type { MergeStylesRootStylesheetsHook } from '../hooks/useMergeStylesRootStylesheets';\nimport type { UseStyledHook } from '../hooks/useStyled';\nimport type { UseWindowHook } from './MergeStylesDefaultContext';\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  interface DocumentOrShadowRoot {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/adoptedStyleSheets) */\n    adoptedStyleSheets: CSSStyleSheet[];\n  }\n}\n\nexport type MergeStylesRootContextValue = {\n  stylesheets: Map<string, ExtendedCSSStyleSheet>;\n  useAdoptedStylesheetEx: AdoptedStylesheetExHook;\n  useAdoptedStylesheet: AdoptedStylesheetHook;\n  useShadowConfig: ShadowConfigHook;\n  useMergeStylesShadowRootContext: MergeStylesShadowRootContextHook;\n  useHasMergeStylesShadowRootContext: HasMergeStylesShadowRootContextHook;\n  useMergeStylesRootStylesheets: MergeStylesRootStylesheetsHook;\n  useWindow: UseWindowHook;\n  useStyled: UseStyledHook;\n};\n\nexport const MergeStylesRootContext = React.createContext<MergeStylesRootContextValue>(getNewContext());\n\nexport type MergeStylesRootProviderProps = {\n  /**\n   * Map of stylesheets available in the context.\n   */\n  stylesheets?: Map<string, ExtendedCSSStyleSheet>;\n\n  /**\n   * Optional `window` object to use for reading adopted stylesheets.\n   * Useful for multi-window scenarios.\n   */\n  window?: Window;\n\n  useAdoptedStylesheetEx?: AdoptedStylesheetExHook;\n  useAdoptedStylesheet?: AdoptedStylesheetHook;\n  useShadowConfig?: ShadowConfigHook;\n  useMergeStylesShadowRootContext?: MergeStylesShadowRootContextHook;\n  useHasMergeStylesShadowRootContext?: HasMergeStylesShadowRootContextHook;\n  useMergeStylesRootStylesheets?: MergeStylesRootStylesheetsHook;\n  useWindow?: UseWindowHook;\n  useStyled?: UseStyledHook;\n};\n\n/**\n * Root context provider for mergeStyles shadow DOM.\n * Typically this is placed at the render root of your React application.\n */\nexport const MergeStylesRootProvider: React.FC<MergeStylesRootProviderProps> = ({\n  stylesheets: userSheets,\n  window: userWindow,\n  useAdoptedStylesheet,\n  useAdoptedStylesheetEx,\n  useShadowConfig,\n  useMergeStylesShadowRootContext,\n  useHasMergeStylesShadowRootContext,\n  useMergeStylesRootStylesheets,\n  useWindow,\n  useStyled,\n  ...props\n}) => {\n  const win = userWindow ?? getWindow();\n  const [stylesheets, setStylesheets] = React.useState<Map<string, ExtendedCSSStyleSheet>>(\n    () => userSheets || new Map(),\n  );\n\n  const sheetHandler = React.useCallback(({ key, sheet }) => {\n    setStylesheets(prev => {\n      const next = new Map<string, ExtendedCSSStyleSheet>(prev);\n      next.set(key, sheet);\n      return next;\n    });\n  }, []);\n\n  // Udapte stylesheets based on user style sheet changes\n  React.useEffect(() => {\n    setStylesheets(userSheets || new Map());\n  }, [userSheets]);\n\n  // Wire up listener for adopted stylesheets\n  React.useEffect(() => {\n    if (!win) {\n      return;\n    }\n\n    const sheet = ShadowDomStylesheet.getInstance(makeShadowConfig(GLOBAL_STYLESHEET_KEY, false, win));\n    const off = sheet.onAddSheet(sheetHandler);\n\n    return () => {\n      off();\n    };\n  }, [win, sheetHandler]);\n\n  // Read stylesheets from window on mount\n  React.useEffect(() => {\n    if (!win) {\n      return;\n    }\n\n    let changed = false;\n    const next = new Map<string, ExtendedCSSStyleSheet>(stylesheets);\n    const sheet = ShadowDomStylesheet.getInstance(makeShadowConfig(GLOBAL_STYLESHEET_KEY, false, win));\n\n    const adoptedSheets = sheet.getAdoptedSheets();\n\n    adoptedSheets.forEach((adoptedSheet, key) => {\n      next.set(key, adoptedSheet);\n      changed = true;\n    });\n\n    if (changed) {\n      setStylesheets(next);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const defaultValues = React.useMemo(() => {\n    return {\n      stylesheets,\n      useAdoptedStylesheet: useAdoptedStylesheet || useAdoptedStylesheetDefault,\n      useAdoptedStylesheetEx: useAdoptedStylesheetEx || useAdoptedStylesheetExDefault,\n      useShadowConfig: useShadowConfig || useShadowConfigDefault,\n      useMergeStylesShadowRootContext: useMergeStylesShadowRootContext || useMergeStylesShadowRootContextDefault,\n      useHasMergeStylesShadowRootContext:\n        useHasMergeStylesShadowRootContext || useHasMergeStylesShadowRootContextDefault,\n      useMergeStylesRootStylesheets: useMergeStylesRootStylesheets || useMergeStylesRootStylesheetsDefault,\n      useWindow: useWindow || useWindowDefault,\n      useStyled: useStyled || useStyledDefault,\n    };\n  }, [\n    stylesheets,\n    useAdoptedStylesheet,\n    useAdoptedStylesheetEx,\n    useShadowConfig,\n    useMergeStylesShadowRootContext,\n    useHasMergeStylesShadowRootContext,\n    useMergeStylesRootStylesheets,\n    useWindow,\n    useStyled,\n  ]);\n\n  return (\n    <MergeStylesDefaultContext.Provider value={defaultValues}>\n      <MergeStylesRootContext.Provider value={defaultValues} {...props} />\n    </MergeStylesDefaultContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}