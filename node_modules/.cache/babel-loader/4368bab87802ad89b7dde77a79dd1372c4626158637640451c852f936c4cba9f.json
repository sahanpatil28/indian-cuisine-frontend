{"ast":null,"code":"import { useDocument, useWindow } from '@fluentui/react-window-provider';\n/**\n * NOTE: the check for `window`/`document` is a bit verbose and perhaps\n * overkill but it ensures the prior assumbed behavior of directly\n * calling `window`/`document` is preserved.\n *\n * It is possible to set `window` to undefined on `WindowProvider` so\n * we'll fallback to directly accessing the global in that (hopefully unlikely)\n * case.\n */\n/**\n * Get a reference to the `document` object.\n * Use this in place of the global `document` in React function components.\n * @returns Document | undefined\n */\nexport var useDocumentEx = function () {\n  var _a;\n  // eslint-disable-next-line no-restricted-globals\n  return (_a = useDocument()) !== null && _a !== void 0 ? _a : typeof document !== 'undefined' ? document : undefined;\n};\n/**\n * Get a reference to the `window` object.\n * Use this in place of the global `window` in React function components.\n * @returns Window | undefined\n */\nexport var useWindowEx = function () {\n  var _a;\n  // eslint-disable-next-line no-restricted-globals\n  return (_a = useWindow()) !== null && _a !== void 0 ? _a : typeof window !== 'undefined' ? window : undefined;\n};\n/**\n * Get a reference to the `document` object.\n * Use this in place of the global `document` in React class components.\n *\n * @param ctx - Class component WindowContext\n * @returns Document | undefined\n */\nexport var getDocumentEx = function (ctx) {\n  var _a, _b;\n  // eslint-disable-next-line no-restricted-globals\n  return (_b = (_a = ctx === null || ctx === void 0 ? void 0 : ctx.window) === null || _a === void 0 ? void 0 : _a.document) !== null && _b !== void 0 ? _b : typeof document !== 'undefined' ? document : undefined;\n};\n/**\n * Get a reference to the `window` object.\n * Use this in place of the global `window` in React class components.\n *\n * @param ctx - Class component WindowContext\n * @returns Window | undefined\n */\nexport var getWindowEx = function (ctx) {\n  var _a;\n  // eslint-disable-next-line no-restricted-globals\n  return (_a = ctx === null || ctx === void 0 ? void 0 : ctx.window) !== null && _a !== void 0 ? _a : typeof window !== 'undefined' ? window : undefined;\n};","map":{"version":3,"names":["useDocument","useWindow","useDocumentEx","_a","document","undefined","useWindowEx","window","getDocumentEx","ctx","_b","getWindowEx"],"sources":["C:\\Users\\sahan\\Documents\\Projects\\indian-cuisine-frontend\\node_modules\\@fluentui\\react\\lib\\src\\utilities\\dom.ts"],"sourcesContent":["import { useDocument, useWindow, WindowProviderProps } from '@fluentui/react-window-provider';\n\n/**\n * NOTE: the check for `window`/`document` is a bit verbose and perhaps\n * overkill but it ensures the prior assumbed behavior of directly\n * calling `window`/`document` is preserved.\n *\n * It is possible to set `window` to undefined on `WindowProvider` so\n * we'll fallback to directly accessing the global in that (hopefully unlikely)\n * case.\n */\n\n/**\n * Get a reference to the `document` object.\n * Use this in place of the global `document` in React function components.\n * @returns Document | undefined\n */\nexport const useDocumentEx = () => {\n  // eslint-disable-next-line no-restricted-globals\n  return useDocument() ?? (typeof document !== 'undefined' ? document : undefined);\n};\n\n/**\n * Get a reference to the `window` object.\n * Use this in place of the global `window` in React function components.\n * @returns Window | undefined\n */\nexport const useWindowEx = () => {\n  // eslint-disable-next-line no-restricted-globals\n  return useWindow() ?? (typeof window !== 'undefined' ? window : undefined);\n};\n\n/**\n * Get a reference to the `document` object.\n * Use this in place of the global `document` in React class components.\n *\n * @param ctx - Class component WindowContext\n * @returns Document | undefined\n */\nexport const getDocumentEx = (ctx: Pick<WindowProviderProps, 'window'> | undefined) => {\n  // eslint-disable-next-line no-restricted-globals\n  return ctx?.window?.document ?? (typeof document !== 'undefined' ? document : undefined);\n};\n\n/**\n * Get a reference to the `window` object.\n * Use this in place of the global `window` in React class components.\n *\n * @param ctx - Class component WindowContext\n * @returns Window | undefined\n */\nexport const getWindowEx = (ctx: Pick<WindowProviderProps, 'window'> | undefined) => {\n  // eslint-disable-next-line no-restricted-globals\n  return ctx?.window ?? (typeof window !== 'undefined' ? window : undefined);\n};\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,SAAS,QAA6B,iCAAiC;AAE7F;;;;;;;;;AAUA;;;;;AAKA,OAAO,IAAMC,aAAa,GAAG,SAAAA,CAAA;;EAC3B;EACA,OAAO,CAAAC,EAAA,GAAAH,WAAW,EAAE,cAAAG,EAAA,cAAAA,EAAA,GAAK,OAAOC,QAAQ,KAAK,WAAW,GAAGA,QAAQ,GAAGC,SAAU;AAClF,CAAC;AAED;;;;;AAKA,OAAO,IAAMC,WAAW,GAAG,SAAAA,CAAA;;EACzB;EACA,OAAO,CAAAH,EAAA,GAAAF,SAAS,EAAE,cAAAE,EAAA,cAAAA,EAAA,GAAK,OAAOI,MAAM,KAAK,WAAW,GAAGA,MAAM,GAAGF,SAAU;AAC5E,CAAC;AAED;;;;;;;AAOA,OAAO,IAAMG,aAAa,GAAG,SAAAA,CAACC,GAAoD;;EAChF;EACA,OAAO,CAAAC,EAAA,IAAAP,EAAA,GAAAM,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEF,MAAM,cAAAJ,EAAA,uBAAAA,EAAA,CAAEC,QAAQ,cAAAM,EAAA,cAAAA,EAAA,GAAK,OAAON,QAAQ,KAAK,WAAW,GAAGA,QAAQ,GAAGC,SAAU;AAC1F,CAAC;AAED;;;;;;;AAOA,OAAO,IAAMM,WAAW,GAAG,SAAAA,CAACF,GAAoD;;EAC9E;EACA,OAAO,CAAAN,EAAA,GAAAM,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEF,MAAM,cAAAJ,EAAA,cAAAA,EAAA,GAAK,OAAOI,MAAM,KAAK,WAAW,GAAGA,MAAM,GAAGF,SAAU;AAC5E,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}