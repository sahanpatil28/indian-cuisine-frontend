{"ast":null,"code":"import { memoizeFunction } from '../../../Utilities';\nimport { mergeStyles } from '../../../Styling';\nexport var SplitButtonGlobalClassNames = {\n  msSplitButtonDivider: 'ms-SplitButton-divider'\n};\nexport var getSplitButtonClassNames = memoizeFunction(function (styles, disabled, expanded, checked, primaryDisabled) {\n  return {\n    root: mergeStyles(styles.splitButtonMenuButton, expanded && [styles.splitButtonMenuButtonExpanded], disabled && [styles.splitButtonMenuButtonDisabled], checked && !disabled && [styles.splitButtonMenuButtonChecked], primaryDisabled && !disabled && [{\n      ':focus': styles.splitButtonMenuFocused\n    }]),\n    splitButtonContainer: mergeStyles(styles.splitButtonContainer, !disabled && checked && [styles.splitButtonContainerChecked, {\n      ':hover': styles.splitButtonContainerCheckedHovered\n    }], !disabled && !checked && [{\n      ':hover': styles.splitButtonContainerHovered,\n      ':focus': styles.splitButtonContainerFocused\n    }], disabled && styles.splitButtonContainerDisabled),\n    icon: mergeStyles(styles.splitButtonMenuIcon, disabled && styles.splitButtonMenuIconDisabled, !disabled && primaryDisabled && styles.splitButtonMenuIcon),\n    flexContainer: mergeStyles(styles.splitButtonFlexContainer),\n    divider: mergeStyles(SplitButtonGlobalClassNames.msSplitButtonDivider, styles.splitButtonDivider, (primaryDisabled || disabled) && styles.splitButtonDividerDisabled)\n  };\n});","map":{"version":3,"names":["memoizeFunction","mergeStyles","SplitButtonGlobalClassNames","msSplitButtonDivider","getSplitButtonClassNames","styles","disabled","expanded","checked","primaryDisabled","root","splitButtonMenuButton","splitButtonMenuButtonExpanded","splitButtonMenuButtonDisabled","splitButtonMenuButtonChecked","splitButtonMenuFocused","splitButtonContainer","splitButtonContainerChecked","splitButtonContainerCheckedHovered","splitButtonContainerHovered","splitButtonContainerFocused","splitButtonContainerDisabled","icon","splitButtonMenuIcon","splitButtonMenuIconDisabled","flexContainer","splitButtonFlexContainer","divider","splitButtonDivider","splitButtonDividerDisabled"],"sources":["C:\\Users\\sahan\\Documents\\Projects\\indian-cuisine-frontend\\node_modules\\@fluentui\\react\\lib\\components\\Button\\src\\components\\Button\\SplitButton\\SplitButton.classNames.ts"],"sourcesContent":["import { memoizeFunction } from '../../../Utilities';\nimport { mergeStyles } from '../../../Styling';\nimport type { IButtonStyles } from '../Button.types';\n\nexport interface ISplitButtonClassNames {\n  root?: string;\n  icon?: string;\n  splitButtonContainer?: string;\n  flexContainer?: string;\n  divider?: string;\n}\n\nexport const SplitButtonGlobalClassNames = {\n  msSplitButtonDivider: 'ms-SplitButton-divider',\n};\n\nexport const getSplitButtonClassNames = memoizeFunction(\n  (\n    styles: IButtonStyles,\n    disabled: boolean,\n    expanded: boolean,\n    checked: boolean,\n    primaryDisabled?: boolean,\n  ): ISplitButtonClassNames => {\n    return {\n      root: mergeStyles(\n        styles.splitButtonMenuButton,\n        expanded && [styles.splitButtonMenuButtonExpanded],\n        disabled && [styles.splitButtonMenuButtonDisabled],\n        checked && !disabled && [styles.splitButtonMenuButtonChecked],\n        primaryDisabled &&\n          !disabled && [\n            {\n              ':focus': styles.splitButtonMenuFocused,\n            },\n          ],\n      ),\n\n      splitButtonContainer: mergeStyles(\n        styles.splitButtonContainer,\n        !disabled &&\n          checked && [\n            styles.splitButtonContainerChecked,\n            {\n              ':hover': styles.splitButtonContainerCheckedHovered,\n            },\n          ],\n        !disabled &&\n          !checked && [\n            {\n              ':hover': styles.splitButtonContainerHovered,\n              ':focus': styles.splitButtonContainerFocused,\n            },\n          ],\n        disabled && styles.splitButtonContainerDisabled,\n      ),\n\n      icon: mergeStyles(\n        styles.splitButtonMenuIcon,\n        disabled && styles.splitButtonMenuIconDisabled,\n        !disabled && primaryDisabled && styles.splitButtonMenuIcon,\n      ),\n\n      flexContainer: mergeStyles(styles.splitButtonFlexContainer),\n\n      divider: mergeStyles(\n        SplitButtonGlobalClassNames.msSplitButtonDivider,\n        styles.splitButtonDivider,\n        (primaryDisabled || disabled) && styles.splitButtonDividerDisabled,\n      ),\n    };\n  },\n);\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,oBAAoB;AACpD,SAASC,WAAW,QAAQ,kBAAkB;AAW9C,OAAO,IAAMC,2BAA2B,GAAG;EACzCC,oBAAoB,EAAE;CACvB;AAED,OAAO,IAAMC,wBAAwB,GAAGJ,eAAe,CACrD,UACEK,MAAqB,EACrBC,QAAiB,EACjBC,QAAiB,EACjBC,OAAgB,EAChBC,eAAyB;EAEzB,OAAO;IACLC,IAAI,EAAET,WAAW,CACfI,MAAM,CAACM,qBAAqB,EAC5BJ,QAAQ,IAAI,CAACF,MAAM,CAACO,6BAA6B,CAAC,EAClDN,QAAQ,IAAI,CAACD,MAAM,CAACQ,6BAA6B,CAAC,EAClDL,OAAO,IAAI,CAACF,QAAQ,IAAI,CAACD,MAAM,CAACS,4BAA4B,CAAC,EAC7DL,eAAe,IACb,CAACH,QAAQ,IAAI,CACX;MACE,QAAQ,EAAED,MAAM,CAACU;KAClB,CACF,CACJ;IAEDC,oBAAoB,EAAEf,WAAW,CAC/BI,MAAM,CAACW,oBAAoB,EAC3B,CAACV,QAAQ,IACPE,OAAO,IAAI,CACTH,MAAM,CAACY,2BAA2B,EAClC;MACE,QAAQ,EAAEZ,MAAM,CAACa;KAClB,CACF,EACH,CAACZ,QAAQ,IACP,CAACE,OAAO,IAAI,CACV;MACE,QAAQ,EAAEH,MAAM,CAACc,2BAA2B;MAC5C,QAAQ,EAAEd,MAAM,CAACe;KAClB,CACF,EACHd,QAAQ,IAAID,MAAM,CAACgB,4BAA4B,CAChD;IAEDC,IAAI,EAAErB,WAAW,CACfI,MAAM,CAACkB,mBAAmB,EAC1BjB,QAAQ,IAAID,MAAM,CAACmB,2BAA2B,EAC9C,CAAClB,QAAQ,IAAIG,eAAe,IAAIJ,MAAM,CAACkB,mBAAmB,CAC3D;IAEDE,aAAa,EAAExB,WAAW,CAACI,MAAM,CAACqB,wBAAwB,CAAC;IAE3DC,OAAO,EAAE1B,WAAW,CAClBC,2BAA2B,CAACC,oBAAoB,EAChDE,MAAM,CAACuB,kBAAkB,EACzB,CAACnB,eAAe,IAAIH,QAAQ,KAAKD,MAAM,CAACwB,0BAA0B;GAErE;AACH,CAAC,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}