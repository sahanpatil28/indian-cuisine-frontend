{"ast":null,"code":"import * as React from 'react';\nimport { MergeStylesShadowRootContext } from '../contexts/MergeStylesShadowRootContext';\n/**\n * Test if a context is available.\n * @returns true if there is a context.\n */\nexport var useHasMergeStylesShadowRootContext = function () {\n  return !!useMergeStylesShadowRootContext();\n};\n/**\n * Get a reference to the shadow root context.\n * @returns The context for the shadow root.\n */\nexport var useMergeStylesShadowRootContext = function () {\n  return React.useContext(MergeStylesShadowRootContext);\n};","map":{"version":3,"names":["React","MergeStylesShadowRootContext","useHasMergeStylesShadowRootContext","useMergeStylesShadowRootContext","useContext"],"sources":["C:\\Users\\sahan\\Documents\\Projects\\indian-cuisine-frontend\\node_modules\\@fluentui\\utilities\\lib\\shadowDom\\src\\shadowDom\\hooks\\useMergeStylesShadowRoot.ts"],"sourcesContent":["import * as React from 'react';\nimport {\n  MergeStylesShadowRootContext,\n  MergeStylesShadowRootContextValue,\n} from '../contexts/MergeStylesShadowRootContext';\n\nexport type HasMergeStylesShadowRootContextHook = () => boolean;\nexport type MergeStylesShadowRootContextHook = () => MergeStylesShadowRootContextValue | undefined;\n\n/**\n * Test if a context is available.\n * @returns true if there is a context.\n */\nexport const useHasMergeStylesShadowRootContext: HasMergeStylesShadowRootContextHook = () => {\n  return !!useMergeStylesShadowRootContext();\n};\n\n/**\n * Get a reference to the shadow root context.\n * @returns The context for the shadow root.\n */\nexport const useMergeStylesShadowRootContext: MergeStylesShadowRootContextHook = () => {\n  return React.useContext(MergeStylesShadowRootContext);\n};\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SACEC,4BAA4B,QAEvB,0CAA0C;AAKjD;;;;AAIA,OAAO,IAAMC,kCAAkC,GAAwC,SAAAA,CAAA;EACrF,OAAO,CAAC,CAACC,+BAA+B,EAAE;AAC5C,CAAC;AAED;;;;AAIA,OAAO,IAAMA,+BAA+B,GAAqC,SAAAA,CAAA;EAC/E,OAAOH,KAAK,CAACI,UAAU,CAACH,4BAA4B,CAAC;AACvD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}