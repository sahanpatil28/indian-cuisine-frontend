{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sahan\\\\Documents\\\\Projects\\\\indian-cuisine-frontend\\\\src\\\\components\\\\DishList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DishList = () => {\n  _s();\n  const [dishes, setDishes] = useState([]); // To store dishes\n  const [error, setError] = useState(null); // To handle errors\n\n  useEffect(() => {\n    fetch('http://localhost:3000/dishes') // Fetch data from backend\n    .then(response => response.json()).then(data => {\n      console.log('Fetched data:', data); // Log fetched data\n      setDishes(data); // Set fetched data to state\n    }).catch(err => {\n      console.error('Fetch error:', err); // Log any errors\n      setError('Failed to fetch data'); // Set error message\n    });\n  }, []);\n\n  // Show loading message or error\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n  if (dishes.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dish List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: dishes.map((dish, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: dish.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this) // Display dish names\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(DishList, \"yTMuMCqZLzcLWbIo3xxSHgA4m0c=\");\n_c = DishList;\nexport default DishList;\nvar _c;\n$RefreshReg$(_c, \"DishList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","DishList","_s","dishes","setDishes","error","setError","fetch","then","response","json","data","console","log","catch","err","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","dish","index","name","_c","$RefreshReg$"],"sources":["C:/Users/sahan/Documents/Projects/indian-cuisine-frontend/src/components/DishList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst DishList = () => {\r\n  const [dishes, setDishes] = useState([]); // To store dishes\r\n  const [error, setError] = useState(null); // To handle errors\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:3000/dishes') // Fetch data from backend\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log('Fetched data:', data); // Log fetched data\r\n        setDishes(data); // Set fetched data to state\r\n      })\r\n      .catch(err => {\r\n        console.error('Fetch error:', err); // Log any errors\r\n        setError('Failed to fetch data'); // Set error message\r\n      });\r\n  }, []);\r\n\r\n  // Show loading message or error\r\n  if (error) {\r\n    return <p>{error}</p>;\r\n  }\r\n\r\n  if (dishes.length === 0) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Dish List</h1>\r\n      <ul>\r\n        {dishes.map((dish, index) => (\r\n          <li key={index}>{dish.name}</li> // Display dish names\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DishList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE1CC,SAAS,CAAC,MAAM;IACdS,KAAK,CAAC,8BAA8B,CAAC,CAAC;IAAA,CACnCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,IAAI,CAAC,CAAC,CAAC;MACpCP,SAAS,CAACO,IAAI,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,CACDG,KAAK,CAACC,GAAG,IAAI;MACZH,OAAO,CAACP,KAAK,CAAC,cAAc,EAAEU,GAAG,CAAC,CAAC,CAAC;MACpCT,QAAQ,CAAC,sBAAsB,CAAC,CAAC,CAAC;IACpC,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,IAAID,KAAK,EAAE;IACT,oBAAOL,OAAA;MAAAgB,QAAA,EAAIX;IAAK;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EACvB;EAEA,IAAIjB,MAAM,CAACkB,MAAM,KAAK,CAAC,EAAE;IACvB,oBAAOrB,OAAA;MAAAgB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC1B;EAEA,oBACEpB,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBpB,OAAA;MAAAgB,QAAA,EACGb,MAAM,CAACmB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACtBxB,OAAA;QAAAgB,QAAA,EAAiBO,IAAI,CAACE;MAAI,GAAjBD,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAAC,CAAC;MAClC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAClB,EAAA,CApCID,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AAsCd,eAAeA,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}