{"ast":null,"code":"import { findElementRecursive } from './findElementRecursive';\n/**\n * Determines if an element, or any of its ancestors, contain the given attribute\n * @param element - element to start searching at\n * @param attribute - the attribute to search for\n * @returns the value of the first instance found\n */\nexport function elementContainsAttribute(element, attribute, doc) {\n  var elementMatch = findElementRecursive(element, function (testElement) {\n    return testElement.hasAttribute(attribute);\n  }, doc);\n  return elementMatch && elementMatch.getAttribute(attribute);\n}","map":{"version":3,"names":["findElementRecursive","elementContainsAttribute","element","attribute","doc","elementMatch","testElement","hasAttribute","getAttribute"],"sources":["C:\\Users\\sahan\\Documents\\Projects\\indian-cuisine-frontend\\node_modules\\@fluentui\\dom-utilities\\src\\elementContainsAttribute.ts"],"sourcesContent":["import { findElementRecursive } from './findElementRecursive';\n\n/**\n * Determines if an element, or any of its ancestors, contain the given attribute\n * @param element - element to start searching at\n * @param attribute - the attribute to search for\n * @returns the value of the first instance found\n */\nexport function elementContainsAttribute(element: HTMLElement, attribute: string, doc?: Document): string | null {\n  const elementMatch = findElementRecursive(\n    element,\n    (testElement: HTMLElement) => testElement.hasAttribute(attribute),\n    doc,\n  );\n\n  return elementMatch && elementMatch.getAttribute(attribute);\n}\n"],"mappings":"AAAA,SAASA,oBAAoB,QAAQ,wBAAwB;AAE7D;;;;;;AAMA,OAAM,SAAUC,wBAAwBA,CAACC,OAAoB,EAAEC,SAAiB,EAAEC,GAAc;EAC9F,IAAMC,YAAY,GAAGL,oBAAoB,CACvCE,OAAO,EACP,UAACI,WAAwB;IAAK,OAAAA,WAAW,CAACC,YAAY,CAACJ,SAAS,CAAC;EAAnC,CAAmC,EACjEC,GAAG,CACJ;EAED,OAAOC,YAAY,IAAIA,YAAY,CAACG,YAAY,CAACL,SAAS,CAAC;AAC7D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}