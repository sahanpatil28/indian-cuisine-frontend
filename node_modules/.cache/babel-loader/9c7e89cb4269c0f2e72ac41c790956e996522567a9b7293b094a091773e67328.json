{"ast":null,"code":"import * as React from 'react';\nimport { useCustomizationSettings } from '@fluentui/utilities';\nimport { createTheme } from '@fluentui/theme';\nimport { ThemeContext } from './ThemeContext';\n/**\n * Get theme from CustomizerContext or Customizations singleton.\n */\nfunction useCompatTheme() {\n  return useCustomizationSettings(['theme']).theme;\n}\n/**\n * React hook for programmatically accessing the theme.\n */\nexport var useTheme = function () {\n  var theme = React.useContext(ThemeContext);\n  var legacyTheme = useCompatTheme();\n  return theme || legacyTheme || createTheme({});\n};","map":{"version":3,"names":["React","useCustomizationSettings","createTheme","ThemeContext","useCompatTheme","theme","useTheme","useContext","legacyTheme"],"sources":["C:\\Users\\sahan\\Documents\\Projects\\indian-cuisine-frontend\\node_modules\\@fluentui\\react\\lib\\utilities\\src\\utilities\\ThemeProvider\\useTheme.ts"],"sourcesContent":["import * as React from 'react';\nimport { useCustomizationSettings } from '@fluentui/utilities';\nimport { createTheme } from '@fluentui/theme';\nimport { ThemeContext } from './ThemeContext';\nimport type { ITheme, Theme } from '@fluentui/theme';\n\n/**\n * Get theme from CustomizerContext or Customizations singleton.\n */\nfunction useCompatTheme(): ITheme | undefined {\n  return useCustomizationSettings(['theme']).theme;\n}\n\n/**\n * React hook for programmatically accessing the theme.\n */\nexport const useTheme = (): Theme => {\n  const theme = React.useContext(ThemeContext);\n  const legacyTheme = useCompatTheme();\n\n  return theme || legacyTheme || createTheme({});\n};\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,wBAAwB,QAAQ,qBAAqB;AAC9D,SAASC,WAAW,QAAQ,iBAAiB;AAC7C,SAASC,YAAY,QAAQ,gBAAgB;AAG7C;;;AAGA,SAASC,cAAcA,CAAA;EACrB,OAAOH,wBAAwB,CAAC,CAAC,OAAO,CAAC,CAAC,CAACI,KAAK;AAClD;AAEA;;;AAGA,OAAO,IAAMC,QAAQ,GAAG,SAAAA,CAAA;EACtB,IAAMD,KAAK,GAAGL,KAAK,CAACO,UAAU,CAACJ,YAAY,CAAC;EAC5C,IAAMK,WAAW,GAAGJ,cAAc,EAAE;EAEpC,OAAOC,KAAK,IAAIG,WAAW,IAAIN,WAAW,CAAC,EAAE,CAAC;AAChD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}