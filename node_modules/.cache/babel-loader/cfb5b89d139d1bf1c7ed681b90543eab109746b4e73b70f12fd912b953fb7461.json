{"ast":null,"code":"import { memoizeFunction } from '../../Utilities';\nimport { mergeStyles } from '../../Styling';\nexport var getClassNames = memoizeFunction(function (styles, className, isOpen, disabled, required, focused, allowFreeForm, hasErrorMessage) {\n  // const mergeStyles = mergeStylesShadow(styles.__shadowConfig__);\n  return {\n    container: mergeStyles(styles.__shadowConfig__, 'ms-ComboBox-container', className, styles.container),\n    label: mergeStyles(styles.__shadowConfig__, styles.label, disabled && styles.labelDisabled),\n    root: mergeStyles(styles.__shadowConfig__, 'ms-ComboBox', hasErrorMessage ? styles.rootError : isOpen && 'is-open', required && 'is-required', styles.root, !allowFreeForm && styles.rootDisallowFreeForm, hasErrorMessage && !focused ? styles.rootError : !disabled && focused && styles.rootFocused, !disabled && {\n      selectors: {\n        ':hover': hasErrorMessage ? styles.rootError : !isOpen && !focused && styles.rootHovered,\n        ':active': hasErrorMessage ? styles.rootError : styles.rootPressed,\n        ':focus': hasErrorMessage ? styles.rootError : styles.rootFocused\n      }\n    }, disabled && ['is-disabled', styles.rootDisabled]),\n    input: mergeStyles(styles.__shadowConfig__, 'ms-ComboBox-Input', styles.input, disabled && styles.inputDisabled),\n    errorMessage: mergeStyles(styles.__shadowConfig__, styles.errorMessage),\n    callout: mergeStyles(styles.__shadowConfig__, 'ms-ComboBox-callout', styles.callout),\n    optionsContainerWrapper: mergeStyles(styles.__shadowConfig__, 'ms-ComboBox-optionsContainerWrapper', styles.optionsContainerWrapper),\n    optionsContainer: mergeStyles(styles.__shadowConfig__, 'ms-ComboBox-optionsContainer', styles.optionsContainer),\n    header: mergeStyles(styles.__shadowConfig__, 'ms-ComboBox-header', styles.header),\n    divider: mergeStyles(styles.__shadowConfig__, 'ms-ComboBox-divider', styles.divider),\n    screenReaderText: mergeStyles(styles.__shadowConfig__, styles.screenReaderText)\n  };\n});\nexport var getComboBoxOptionClassNames = memoizeFunction(function (styles) {\n  return {\n    optionText: mergeStyles(styles.__shadowConfig__, 'ms-ComboBox-optionText', styles.optionText),\n    root: mergeStyles(styles.__shadowConfig__, 'ms-ComboBox-option', styles.root, {\n      selectors: {\n        ':hover': styles.rootHovered,\n        ':focus': styles.rootFocused,\n        ':active': styles.rootPressed\n      }\n    }),\n    optionTextWrapper: mergeStyles(styles.__shadowConfig__, styles.optionTextWrapper)\n  };\n});","map":{"version":3,"names":["memoizeFunction","mergeStyles","getClassNames","styles","className","isOpen","disabled","required","focused","allowFreeForm","hasErrorMessage","container","__shadowConfig__","label","labelDisabled","root","rootError","rootDisallowFreeForm","rootFocused","selectors","rootHovered","rootPressed","rootDisabled","input","inputDisabled","errorMessage","callout","optionsContainerWrapper","optionsContainer","header","divider","screenReaderText","getComboBoxOptionClassNames","optionText","optionTextWrapper"],"sources":["C:\\Users\\sahan\\Documents\\Projects\\indian-cuisine-frontend\\node_modules\\@fluentui\\react\\lib\\components\\src\\components\\ComboBox\\ComboBox.classNames.ts"],"sourcesContent":["import { memoizeFunction } from '../../Utilities';\nimport { mergeStyles } from '../../Styling';\nimport type { IComboBoxStyles, IComboBoxOptionStyles } from './ComboBox.types';\n\nexport interface IComboBoxClassNames {\n  container: string;\n  label: string;\n  root: string;\n  input: string;\n  errorMessage: string;\n  callout: string;\n  optionsContainer: string;\n  header: string;\n  divider: string;\n  optionsContainerWrapper: string;\n  screenReaderText: string;\n}\n\nexport interface IComboBoxOptionClassNames {\n  optionText: string;\n  root: string;\n  optionTextWrapper: string;\n}\n\nexport const getClassNames = memoizeFunction(\n  (\n    styles: Partial<IComboBoxStyles>,\n    className: string,\n    isOpen: boolean,\n    disabled: boolean,\n    required: boolean,\n    focused: boolean,\n    allowFreeForm: boolean,\n    hasErrorMessage: boolean,\n  ): IComboBoxClassNames => {\n    // const mergeStyles = mergeStylesShadow(styles.__shadowConfig__);\n\n    return {\n      container: mergeStyles(styles.__shadowConfig__, 'ms-ComboBox-container', className, styles.container),\n      label: mergeStyles(styles.__shadowConfig__, styles.label, disabled && styles.labelDisabled),\n      root: mergeStyles(\n        styles.__shadowConfig__,\n        'ms-ComboBox',\n        hasErrorMessage ? styles.rootError : isOpen && 'is-open',\n        required && 'is-required',\n        styles.root,\n        !allowFreeForm && styles.rootDisallowFreeForm,\n        hasErrorMessage && !focused ? styles.rootError : !disabled && focused && styles.rootFocused,\n        !disabled && {\n          selectors: {\n            ':hover': hasErrorMessage ? styles.rootError : !isOpen && !focused && styles.rootHovered,\n            ':active': hasErrorMessage ? styles.rootError : styles.rootPressed,\n            ':focus': hasErrorMessage ? styles.rootError : styles.rootFocused,\n          },\n        },\n        disabled && ['is-disabled', styles.rootDisabled],\n      ),\n      input: mergeStyles(styles.__shadowConfig__, 'ms-ComboBox-Input', styles.input, disabled && styles.inputDisabled),\n      errorMessage: mergeStyles(styles.__shadowConfig__, styles.errorMessage),\n      callout: mergeStyles(styles.__shadowConfig__, 'ms-ComboBox-callout', styles.callout),\n      optionsContainerWrapper: mergeStyles(\n        styles.__shadowConfig__,\n        'ms-ComboBox-optionsContainerWrapper',\n        styles.optionsContainerWrapper,\n      ),\n      optionsContainer: mergeStyles(styles.__shadowConfig__, 'ms-ComboBox-optionsContainer', styles.optionsContainer),\n      header: mergeStyles(styles.__shadowConfig__, 'ms-ComboBox-header', styles.header),\n      divider: mergeStyles(styles.__shadowConfig__, 'ms-ComboBox-divider', styles.divider),\n      screenReaderText: mergeStyles(styles.__shadowConfig__, styles.screenReaderText),\n    };\n  },\n);\n\nexport const getComboBoxOptionClassNames = memoizeFunction(\n  (styles: Partial<IComboBoxOptionStyles>): IComboBoxOptionClassNames => {\n    return {\n      optionText: mergeStyles(styles.__shadowConfig__, 'ms-ComboBox-optionText', styles.optionText),\n      root: mergeStyles(styles.__shadowConfig__, 'ms-ComboBox-option', styles.root, {\n        selectors: {\n          ':hover': styles.rootHovered,\n          ':focus': styles.rootFocused,\n          ':active': styles.rootPressed,\n        },\n      }),\n      optionTextWrapper: mergeStyles(styles.__shadowConfig__, styles.optionTextWrapper),\n    };\n  },\n);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}