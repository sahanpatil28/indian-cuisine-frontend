{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sahan\\\\Documents\\\\Projects\\\\indian-cuisine-frontend\\\\src\\\\components\\\\DishDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom'; // To access dynamic URL params\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DishDetails = () => {\n  _s();\n  const {\n    name\n  } = useParams(); // Access the dish name from the URL\n  const [dish, setDish] = useState(null);\n  useEffect(() => {\n    fetch(`http://localhost:3000/dishes/${name}`) // Replace with your actual backend API\n    .then(response => response.json()).then(data => setDish(data));\n  }, [name]);\n  if (!dish) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: dish.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Ingredients: \", dish.ingredients]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Diet: \", dish.diet]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Prep Time: \", dish.prep_time, \" mins\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Cooking Time: \", dish.cooking_time, \" mins\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Flavor: \", dish.flavor]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Region: \", dish.region]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(DishDetails, \"OM3xqojgr/MYygQsDDpc46/xWhg=\", false, function () {\n  return [useParams];\n});\n_c = DishDetails;\nexport default DishDetails;\nvar _c;\n$RefreshReg$(_c, \"DishDetails\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","DishDetails","_s","name","dish","setDish","fetch","then","response","json","data","children","fileName","_jsxFileName","lineNumber","columnNumber","ingredients","diet","prep_time","cooking_time","flavor","region","_c","$RefreshReg$"],"sources":["C:/Users/sahan/Documents/Projects/indian-cuisine-frontend/src/components/DishDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom'; // To access dynamic URL params\r\n\r\nconst DishDetails = () => {\r\n  const { name } = useParams(); // Access the dish name from the URL\r\n  const [dish, setDish] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(`http://localhost:3000/dishes/${name}`) // Replace with your actual backend API\r\n      .then((response) => response.json())\r\n      .then((data) => setDish(data));\r\n  }, [name]);\r\n\r\n  if (!dish) return <p>Loading...</p>;\r\n\r\n  return (\r\n    <div>\r\n      <h1>{dish.name}</h1>\r\n      <p>Ingredients: {dish.ingredients}</p>\r\n      <p>Diet: {dish.diet}</p>\r\n      <p>Prep Time: {dish.prep_time} mins</p>\r\n      <p>Cooking Time: {dish.cooking_time} mins</p>\r\n      <p>Flavor: {dish.flavor}</p>\r\n      <p>Region: {dish.region}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DishDetails;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAK,CAAC,GAAGL,SAAS,CAAC,CAAC,CAAC,CAAC;EAC9B,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACdS,KAAK,CAAC,gCAAgCH,IAAI,EAAE,CAAC,CAAC;IAAA,CAC3CI,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKL,OAAO,CAACK,IAAI,CAAC,CAAC;EAClC,CAAC,EAAE,CAACP,IAAI,CAAC,CAAC;EAEV,IAAI,CAACC,IAAI,EAAE,oBAAOJ,OAAA;IAAAW,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAEnC,oBACEf,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAKP,IAAI,CAACD;IAAI;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACpBf,OAAA;MAAAW,QAAA,GAAG,eAAa,EAACP,IAAI,CAACY,WAAW;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtCf,OAAA;MAAAW,QAAA,GAAG,QAAM,EAACP,IAAI,CAACa,IAAI;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBf,OAAA;MAAAW,QAAA,GAAG,aAAW,EAACP,IAAI,CAACc,SAAS,EAAC,OAAK;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACvCf,OAAA;MAAAW,QAAA,GAAG,gBAAc,EAACP,IAAI,CAACe,YAAY,EAAC,OAAK;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC7Cf,OAAA;MAAAW,QAAA,GAAG,UAAQ,EAACP,IAAI,CAACgB,MAAM;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5Bf,OAAA;MAAAW,QAAA,GAAG,UAAQ,EAACP,IAAI,CAACiB,MAAM;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEV,CAAC;AAACb,EAAA,CAvBID,WAAW;EAAA,QACEH,SAAS;AAAA;AAAAwB,EAAA,GADtBrB,WAAW;AAyBjB,eAAeA,WAAW;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}