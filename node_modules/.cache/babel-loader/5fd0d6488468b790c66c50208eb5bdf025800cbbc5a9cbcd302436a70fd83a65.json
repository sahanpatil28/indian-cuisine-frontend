{"ast":null,"code":"import { findElementRecursive } from './findElementRecursive';\nimport { DATA_PORTAL_ATTRIBUTE } from './setPortalAttribute';\n/**\n * Determine whether a target is within a portal from perspective of root or optional parent.\n * This function only works against portal components that use the setPortalAttribute function.\n * If both parent and child are within the same portal this function will return false.\n * @param target - Element to query portal containment status of.\n * @param parent - Optional parent perspective. Search for containing portal stops at parent\n * (or root if parent is undefined or invalid.)\n */\nexport function portalContainsElement(target, parent, doc) {\n  var _a;\n  var elementMatch = findElementRecursive(target, function (testElement) {\n    var _a;\n    return parent === testElement || !!((_a = testElement.hasAttribute) === null || _a === void 0 ? void 0 : _a.call(testElement, DATA_PORTAL_ATTRIBUTE));\n  }, doc);\n  return elementMatch !== null && !!((_a = elementMatch.hasAttribute) === null || _a === void 0 ? void 0 : _a.call(elementMatch, DATA_PORTAL_ATTRIBUTE));\n}","map":{"version":3,"names":["findElementRecursive","DATA_PORTAL_ATTRIBUTE","portalContainsElement","target","parent","doc","elementMatch","testElement","_a","hasAttribute","call"],"sources":["C:\\Users\\sahan\\Documents\\Projects\\indian-cuisine-frontend\\node_modules\\@fluentui\\dom-utilities\\src\\portalContainsElement.ts"],"sourcesContent":["import { findElementRecursive } from './findElementRecursive';\nimport { DATA_PORTAL_ATTRIBUTE } from './setPortalAttribute';\n\n/**\n * Determine whether a target is within a portal from perspective of root or optional parent.\n * This function only works against portal components that use the setPortalAttribute function.\n * If both parent and child are within the same portal this function will return false.\n * @param target - Element to query portal containment status of.\n * @param parent - Optional parent perspective. Search for containing portal stops at parent\n * (or root if parent is undefined or invalid.)\n */\nexport function portalContainsElement(target: HTMLElement, parent?: HTMLElement, doc?: Document): boolean {\n  const elementMatch = findElementRecursive(\n    target,\n    (testElement: HTMLElement) => parent === testElement || !!testElement.hasAttribute?.(DATA_PORTAL_ATTRIBUTE),\n    doc,\n  );\n  return elementMatch !== null && !!elementMatch.hasAttribute?.(DATA_PORTAL_ATTRIBUTE);\n}\n"],"mappings":"AAAA,SAASA,oBAAoB,QAAQ,wBAAwB;AAC7D,SAASC,qBAAqB,QAAQ,sBAAsB;AAE5D;;;;;;;;AAQA,OAAM,SAAUC,qBAAqBA,CAACC,MAAmB,EAAEC,MAAoB,EAAEC,GAAc;;EAC7F,IAAMC,YAAY,GAAGN,oBAAoB,CACvCG,MAAM,EACN,UAACI,WAAwB;IAAA,IAAAC,EAAA;IAAK,OAAAJ,MAAM,KAAKG,WAAW,IAAI,CAAC,EAAC,CAAAC,EAAA,GAAAD,WAAW,CAACE,YAAY,cAAAD,EAAA,uBAAAA,EAAA,CAAAE,IAAA,CAAAH,WAAA,EAAGN,qBAAqB,CAAC;EAAA,GAC3GI,GAAG,CACJ;EACD,OAAOC,YAAY,KAAK,IAAI,IAAI,CAAC,EAAC,CAAAE,EAAA,GAAAF,YAAY,CAACG,YAAY,cAAAD,EAAA,uBAAAA,EAAA,CAAAE,IAAA,CAAAJ,YAAA,EAAGL,qBAAqB,CAAC;AACtF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}